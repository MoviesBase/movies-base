version: '3.8'

services:
  nginx-proxy:
    image: jwilder/nginx-proxy
    build:
      dockerfile: Dockerfile.nginx
    ports:
      - "80:80"
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
#      - ./nginx-config/proxy-config.conf:/etc/nginx/conf.d/default.conf:ro
    environment:
      - proxy_connect_timeout=75s
      - proxy_read_timeout=300s
      - client_max_body_size=25M
      - location=/favicon.ico { log_not_found off; }
    networks:
      - movies-base-network


  api-movies:
    build:
      dockerfile: Dockerfile
      context: api-movies
      args:
        - environment=${ENVIRONMENT}
    image: api-movies:latest
    expose:
      - "8888"
    env_file:
      - .env.api-movies
    environment:
      - VIRTUAL_HOST=api-movies.localhost
      - VIRTUAL_PORT=8888
    depends_on:
      - nginx-proxy
      - movies-db
      - redis
    volumes:
      - ./api-movies/app:/local
    command: bash -c "gunicorn uservice.wsgi --workers 1 -b 0.0.0.0:8888 --reload"
    networks:
      - movies-base-network

  api-auth:
    build:
      dockerfile: Dockerfile
      context: api-auth
      args:
        - environment=${ENVIRONMENT}
    image: api-auth:latest
    expose:
      - "8888"
    env_file:
      - .env.api-auth
    environment:
      - VIRTUAL_HOST=api-auth.localhost
      - VIRTUAL_PORT=8888
    depends_on:
      - nginx-proxy
      - auth-db
      - redis
    volumes:
      - ./api-auth/app:/local
    command: bash -c "gunicorn uservice.wsgi --workers 1 -b 0.0.0.0:8888 --reload"
    networks:
      - movies-base-network

  redis-server:
    image: redis:5.0.4
    expose:
      - "6379"
    command: [ "redis-server", "--appendonly", "yes" ]
    volumes:
      - ./certs:/certs
    networks:
      - movies-base-network

  redis:
    depends_on:
      - redis-server
    image: runnable/redis-stunnel
    volumes:
      - ./certs/rediscert.pem:/stunnel/private.pem:ro
    expose:
      - "6380"
    environment:
      - REDIS_PORT_6379_TCP_ADDR=redis-server
      - REDIS_PORT_6379_TCP_PORT=6379
    networks:
      - movies-base-network

  movies-db:
    platform: linux/x86_64 # Necessary for MacOS M1 Chip
    image: mysql:5.7.37
    env_file:
      - .env.api-movies
    expose:
      - "3306"
    volumes:
      - mysql_data:/var/lib/mysql
    command: --default-authentication-plugin=mysql_native_password
    networks:
      - movies-base-network

  auth-db:
    platform: linux/x86_64 # Necessary for MacOS M1 Chip
    image: mysql:5.7.37
    env_file:
      - .env.api-auth
    expose:
      - "3306"
    volumes:
      - mysql_data:/var/lib/mysql
    command: --default-authentication-plugin=mysql_native_password
    networks:
      - movies-base-network

volumes:
  mysql_data:

networks:
  movies-base-network:
    name: movies-base-network
